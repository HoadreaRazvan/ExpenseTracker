@page "/incomes/edit/{Id:int}"
@using Microsoft.AspNetCore.Components.Forms
@using ExpenseTracker.Services
@using ExpenseTracker.Data.Models
@inject IncomeService IncomeService
@inject NavigationManager Nav

<h3>Edit Income</h3>

@if (income == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="income" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Title:</label>
            <InputText class="form-control" @bind-Value="income.Title" />
        </div>

        <div class="mb-3">
            <label>Date:</label>
            <InputDate class="form-control" @bind-Value="income.Date" />
        </div>

        <div class="mb-3">
            <label>Amount:</label>
            <InputNumber class="form-control" @bind-Value="income.Amount" />
        </div>

        <div class="mb-3">
            <label>Type:</label>
            <InputSelect class="form-control" @bind-Value="income.Type">
                @foreach (var type in Enum.GetValues<IncomeType>())
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Income? income;

    protected override async Task OnInitializedAsync()
    {
        income = IncomeService.GetIncomeById(Id);
    }

    private async Task HandleValidSubmit()
    {
        income.Date = DateTime.SpecifyKind(income.Date, DateTimeKind.Utc);

        IncomeService.UpdateIncome(income!);
        Nav.NavigateTo("/incomes");
    }
}
