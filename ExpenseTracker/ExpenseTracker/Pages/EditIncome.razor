@page "/incomes/edit/{Id:int}"
@using Microsoft.AspNetCore.Components.Forms
@using ExpenseTracker.Services
@using ExpenseTracker.Data.Models
@inject IncomeService IncomeService
@inject NavigationManager Nav

<NavMenu />

<style>
    .incomes-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
    }

    .page-header {
        text-align: center;
        margin-bottom: 3rem;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        color: #64748b;
        font-size: 1.1rem;
        margin-bottom: 0;
    }

    .form-container {
        background: white;
        padding: 2.5rem;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        margin-bottom: 2rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 600;
        color: #1e293b;
        font-size: 1rem;
    }

    .form-control, .form-select {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 1rem;
        background: #f8fafc;
        transition: all 0.3s ease;
    }

        .form-control:focus, .form-select:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

    .btn-save {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 0.875rem 2.5rem;
        border-radius: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 1rem;
        width: 100%;
        justify-content: center;
        margin-top: 1rem;
    }

        .btn-save:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }

    .loading-text {
        text-align: center;
        font-size: 1.25rem;
        color: #64748b;
        padding: 4rem 0;
    }
</style>

<div class="incomes-container">
    <div class="page-header">
        <h1 class="page-title">Edit Income</h1>
        <p class="page-subtitle">Modify your income details below</p>
    </div>

    <div class="form-container">
        @if (income == null)
        {
            <p class="loading-text">Loading...</p>
        }
        else
        {
            <EditForm Model="income" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary class="validation-summary" />

                <div class="form-group">
                    <label class="form-label">Title</label>
                    <InputText class="form-control" @bind-Value="income.Title" />
                </div>

                <div class="form-group">
                    <label class="form-label">Date</label>
                    <InputDate class="form-control" @bind-Value="income.Date" />
                </div>

                <div class="form-group">
                    <label class="form-label">Amount</label>
                    <InputNumber class="form-control" @bind-Value="income.Amount" />
                </div>

                <div class="form-group">
                    <label class="form-label">Type</label>
                    <InputSelect class="form-select" @bind-Value="income.Type">
                        @foreach (var type in Enum.GetValues<IncomeType>())
                        {
                            <option value="@type">@type</option>
                        }
                    </InputSelect>
                </div>

                <button type="submit" class="btn-save">Save</button>
            </EditForm>
        }
    </div>
</div>
<Footer />

@code {
    [Parameter]
    public int Id { get; set; }

    private Income? income;

    protected override async Task OnInitializedAsync()
    {
        income = IncomeService.GetIncomeById(Id);
    }

    private async Task HandleValidSubmit()
    {
        income.Date = DateTime.SpecifyKind(income.Date, DateTimeKind.Utc);

        IncomeService.UpdateIncome(income!);
        Nav.NavigateTo("/incomes");
    }
}
