@page "/incomes/add"
@using Microsoft.AspNetCore.Components.Forms
@using ExpenseTracker.Services
@using ExpenseTracker.Data.Models
@inject IncomeService IncomeService
@inject NavigationManager Nav

<NavMenu />

<style>
    .incomes-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
    }

    .page-header {
        text-align: center;
        margin-bottom: 3rem;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        color: #64748b;
        font-size: 1.1rem;
        margin-bottom: 0;
    }

    .form-container {
        background: white;
        padding: 2.5rem;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        margin-bottom: 2rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 600;
        color: #1e293b;
        font-size: 1rem;
    }

    .form-control, .form-select {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 1rem;
        background: #f8fafc;
        transition: all 0.3s ease;
    }

        .form-control:focus, .form-select:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

    .btn-save {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 0.875rem 2.5rem;
        border-radius: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 1rem;
        width: 100%;
        justify-content: center;
        margin-top: 1rem;
    }

        .btn-save:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }

    .validation-summary {
        background: linear-gradient(135deg, #fef2f2 0%, #fde8e8 100%);
        border: 1px solid #fca5a5;
        border-radius: 12px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        color: #dc2626;
    }

    .form-actions {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        margin-top: 2rem;
    }
</style>

<div class="incomes-container">
    <div class="page-header">
        <h1 class="page-title">Add New Income</h1>
        <p class="page-subtitle">Register a new income entry</p>
    </div>

    <div class="form-container">
        <EditForm Model="newIncome" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary class="validation-summary" />

            <div class="form-group">
                <label class="form-label">Title</label>
                <InputText class="form-control" @bind-Value="newIncome.Title" placeholder="Enter income title" />
            </div>

            <div class="form-group">
                <label class="form-label">Date</label>
                <InputDate class="form-control" @bind-Value="newIncome.Date" />
            </div>

            <div class="form-group">
                <label class="form-label">Amount</label>
                <InputNumber class="form-control" @bind-Value="newIncome.Amount" placeholder="0.00" />
            </div>

            <div class="form-group">
                <label class="form-label">Type</label>
                <InputSelect class="form-select" @bind-Value="newIncome.Type">
                    @foreach (var type in Enum.GetValues<IncomeType>())
                    {
                        <option value="@type">@type</option>
                    }
                </InputSelect>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn-save">Add Income</button>
            </div>
        </EditForm>
    </div>
</div>
<Footer />

@code {
    private Income newIncome = new Income
        {
            Date = DateTime.Today,
            Type = IncomeType.Salary
        };

    private async Task HandleValidSubmit()
    {
        newIncome.Date = DateTime.SpecifyKind(newIncome.Date, DateTimeKind.Utc);
        await IncomeService.AddIncomeAsync(newIncome);
        Nav.NavigateTo("/incomes");
    }
}
